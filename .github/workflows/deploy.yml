name: EmarkNews CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test & Quality Check
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run ESLint
      run: npx eslint ai-news-system-final.js --format=compact || true
    
    - name: Security audit
      run: npm audit --audit-level=moderate || true
    
    - name: Test /healthz endpoint
      run: |
        node ai-news-system-final.js &
        SERVER_PID=$!
        sleep 5
        curl -f http://localhost:3000/healthz || exit 1
        kill $SERVER_PID
    
    - name: Test /feed endpoint
      run: |
        node ai-news-system-final.js &
        SERVER_PID=$!
        sleep 5
        curl -f "http://localhost:3000/feed?freshness=0&domain_cap=1" || exit 1
        kill $SERVER_PID

  build:
    runs-on: ubuntu-latest
    needs: test
    name: Build & Package
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --only=production
    
    - name: Create deployment package
      run: |
        mkdir -p dist
        cp ai-news-system-final.js dist/
        cp package.json dist/
        cp -r public dist/
        tar -czf emarknews-build.tar.gz -C dist .
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: emarknews-build
        path: emarknews-build.tar.gz
        retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: [test, build]
    name: Deploy to Railway
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: emarknews-build
    
    - name: Extract build
      run: |
        mkdir -p deploy
        tar -xzf emarknews-build.tar.gz -C deploy
    
    - name: Deploy to Railway
      run: |
        echo "üöÄ Deploying to Railway..."
        echo "Build completed successfully"
        echo "Deployment will be triggered by Railway's GitHub integration"
    
    - name: Deployment notification
      run: |
        echo "‚úÖ Deployment pipeline completed"
        echo "üåê Service URL: https://emarknews.com"
        echo "üìä Health check: https://emarknews.com/healthz"
        echo "üì∞ Feed API: https://emarknews.com/feed"

  rollback:
    runs-on: ubuntu-latest
    name: Rollback (Manual Trigger)
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - name: Rollback preparation
      run: |
        echo "üîÑ Rollback switch activated"
        echo "Previous deployment can be restored via Railway dashboard"
        echo "Or by reverting the commit and pushing to main branch"

